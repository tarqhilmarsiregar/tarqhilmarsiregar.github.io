{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";iZACA,knGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,kkBAGA,IAAQC,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IAgCF,QA7B8B,CACtBC,cAAa,SAACC,GAAI,oGACjBA,EAAI,CAAF,gEAKOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CAN5B,EAOxB,EAEME,kBAAiB,WAAG,iHACVT,EAAS,uCAAEU,OAAOX,IAAiB,0CADzB,EAE1B,EAEMY,cAAa,SAACC,GAAY,oGAEzBA,EAAWC,eAAe,MAAO,CAAF,gEAKtBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAU,0CAP5B,EAQhC,EAEMG,iBAAgB,SAACR,GAAI,iHACXP,EAAS,8CAASD,EAAmBQ,IAAE,0CAD5B,EAE3B,6DC9BF,QANqB,CACnBS,SAAU,GAAF,OAAKnB,EAAAA,EAAAA,SAAe,SAC5BoB,OAAQ,SAACV,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,mBAAWU,EAAE,EAC/CW,eAAgB,iSCJlB,45NA2BA,QA1BsB,yBADtB,4FACsB,SADtB,QAWG,EALA,EALmB,EAuBnB,OAxBH,EACsB,OADtB,EACsB,kCACpB,sGACyBC,MAAMC,EAAAA,UAAsB,OACf,OAD9BC,EAAW,EAAH,KACRC,EAAeD,EAASE,OAAM,kBAC7BD,GAAY,2CACpB,0FAED,WAA8Bf,GAAE,uEACiB,OAAzCc,EAAWF,MAAMC,EAAAA,OAAoBb,IAAI,kBACxCc,GAAQ,2CAChB,gGAED,WAAmCG,GAAM,iFACjCL,MAAMC,EAAAA,eAA6B,CACvCK,OAAQ,OACRC,QAAS,CACP,eAAgB,qBAElBC,KAAMC,KAAKC,UAAUL,KAEpBM,MAAK,SAACT,GAAQ,OAAKA,EAASE,MAAM,IAClCO,MAAK,SAACR,GAAY,OAAKA,EAAaS,OAAO,IAAC,OACtC,SAACC,GAAK,OAAKC,QAAQC,IAAIF,EAAM,IAAC,2CACxC,+CAxBH,6DAwBG,EAvBmB,gDCOtB,QATe,CACbG,SAAU,sCACVC,UAAW,qDACXC,WAAY,yBACZzC,cAAe,gCACfE,iBAAkB,EAClBC,kBAAmB,yBCNrB,IAAMuC,EAAgBC,SAASC,cAAc,mBAE7CF,EAAcG,iBAAiB,SAAS,WACpBF,SAASC,cAAc,cAC/BE,UAAUC,OAAO,SAC7B,IAEAL,EAAcG,iBAAiB,WAAW,SAACG,GACvB,KAAdA,EAAEC,SACcN,SAASC,cAAc,cAC/BE,UAAUC,OAAO,SAE/B,IAEaJ,SAASC,cAAc,QAC/BC,iBAAiB,SAAS,WACXF,SAASC,cAAc,cAC/BE,UAAUI,OAAO,SAC7B,yECXMC,EAAM,WAAIC,GAAI,CAAEC,QAASV,SAASC,cAAc,UAEtDU,OAAOT,iBAAiB,cAAc,WACpCM,EAAII,YACN,IAEAD,OAAOT,iBAAiB,QAAQ,WAC9BM,EAAII,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurant-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/hamburger-menu.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import 'regenerator-runtime';\r\nimport { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestaurantIdb = {\r\n  async getRestaurant(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n  async getAllRestaurants() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n\r\n  async putRestaurant(restaurant) {\r\n    // eslint-disable-next-line no-prototype-builtins\r\n    if (!restaurant.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n\r\n    // eslint-disable-next-line consistent-return\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\r\n  },\r\n\r\n  async deleteRestaurant(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n};\r\n\r\nexport default FavoriteRestaurantIdb;\r\n","import CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  GET_DATA: `${CONFIG.BASE_URL}/list`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}/detail/${id}`,\r\n  ADD_REVIEW_URL: 'https://restaurant-api.dicoding.dev/review',\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","import API_ENDPOINT from '../globals/api-endpoint';\r\n\r\nclass RestaurantSource {\r\n  static async Home() {\r\n    const response = await fetch(API_ENDPOINT.GET_DATA);\r\n    const responseJson = response.json();\r\n    return responseJson;\r\n  }\r\n\r\n  static async RestaurantDetail(id) {\r\n    const response = fetch(API_ENDPOINT.DETAIL(id));\r\n    return response;\r\n  }\r\n\r\n  static async AddReviewToRestaurant(review) {\r\n    await fetch(API_ENDPOINT.ADD_REVIEW_URL, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': ' application/json',\r\n      },\r\n      body: JSON.stringify(review),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((responseJson) => responseJson.message)\r\n      .catch((error) => console.log(error));\r\n  }\r\n}\r\n\r\nexport default RestaurantSource;\r\n","const CONFIG = {\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev',\r\n  IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n  CACHE_NAME: 'RestaurantCatalogue-V1',\r\n  DATABASE_NAME: 'restaurant-catalogue-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurants',\r\n};\r\n\r\nexport default CONFIG;\r\n","const hamburgerMenu = document.querySelector('.hamburger-menu');\r\n\r\nhamburgerMenu.addEventListener('click', () => {\r\n  const headerNav = document.querySelector('header nav');\r\n  headerNav.classList.toggle('active');\r\n});\r\n\r\nhamburgerMenu.addEventListener('keydown', (e) => {\r\n  if (e.keyCode === 13) {\r\n    const headerNav = document.querySelector('header nav');\r\n    headerNav.classList.toggle('active');\r\n  }\r\n});\r\n\r\nconst main = document.querySelector('main');\r\nmain.addEventListener('click', () => {\r\n  const headerNav = document.querySelector('header nav');\r\n  headerNav.classList.remove('active');\r\n});\r\n","import 'regenerator-runtime'; /* for async await transpile */\nimport '../styles/style.scss';\nimport '../styles/responsive.scss';\nimport './hamburger-menu';\nimport swRegister from './sw-register';\nimport App from './views/app';\n\nconst app = new App({ content: document.querySelector('main') });\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurants","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","GET_DATA","DETAIL","ADD_REVIEW_URL","fetch","API_ENDPOINT","response","responseJson","json","review","method","headers","body","JSON","stringify","then","message","error","console","log","BASE_URL","IMAGE_URL","CACHE_NAME","hamburgerMenu","document","querySelector","addEventListener","classList","toggle","e","keyCode","remove","app","App","content","window","renderPage","swRegister"],"sourceRoot":""}